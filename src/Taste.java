
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.AbstractTableModel;
import org.json.JSONObject;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author vanshikajoshi
 */
public class Taste extends javax.swing.JFrame {
        ArrayList<Taste1>al;
        mytablemodel tm;
        JLabel lb;
    /**
     * Creates new form Taste
     */
    public Taste(int id) 
    {
        al=new ArrayList<>();
        tm=new mytablemodel();
        lb=new JLabel();
        
        initComponents();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        int h=(int)d.getHeight();
        int w=(int)d.getWidth();
        lb.setBounds(0, 0, w, h);
        ImageIcon ic =new ImageIcon("src/myuploads/nh11.jpeg");
        Image img=ic.getImage().getScaledInstance(w, h, Image.SCALE_SMOOTH);
        ImageIcon im=new ImageIcon(img);
        lb.setIcon(im);
        add(lb);
        setSize(w, h);
    
        jTable1.setModel(tm);
        setVisible(true);
        getTaste(id);        
        
        jEditorPane1.setEditable(false);
        
        jEditorPane1.setContentType("text/html");
      
        jEditorPane1.setText("<html>"
                + "<p align='center' color='red'><b>NOTE</b> : Tastes are between 0 and 100 while the spiciness value is in scoville on an open\n"
                + "scale of 0 and above.</p>"
                + "</html>");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */void getTaste(int id)
    {
    try
        {
         HttpResponse<String> res = Unirest.get("https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/"+id+"/tasteWidget.json?normalize=false")
                    .header("X-RapidAPI-Key", "652fb35be6msh43c979dd6e258dap1ede35jsn29e136726656")
                    .header("X-RapidAPI-Host", "spoonacular-recipe-food-nutrition-v1.p.rapidapi.com")
                    .asString();
         
         if(res.getStatus()==200)
         {
             
            String ans=res.getBody();
            
             System.out.println(ans);
             
             JSONObject obj=new JSONObject(ans);
            
             double sweetness=(Double)obj.get("sweetness");
             double saltiness=(Double)obj.get("saltiness");
             double sourness=(Double)obj.get("sourness");
             double Bitterness=(Double)obj.get("bitterness");
             double savoriness=(Double)obj.get("savoriness");
             double fattiness=(Double)obj.get("fattiness");
             double spiciness=(Double)obj.get("spiciness");
             
             al.add(new Taste1(sweetness, saltiness, sourness, Bitterness, savoriness, fattiness, spiciness));
             tm.fireTableDataChanged();
             }
         
        }
    catch(Exception ex)
        {
         ex.printStackTrace();;
        }
    
    }
    
    class mytablemodel extends AbstractTableModel
    {

        @Override
        public int getRowCount() {
            return al.size();
        }
        

        @Override
        public int getColumnCount() {
            return 7;
        }

        @Override
        public Object getValueAt(int i, int j) {
            Taste1 t1=al.get(i);
            if(j==0)
            {
            return t1.sweetness;
            }
            else if(j==1)
            {
            return t1.saltiness;
            }
            else if(j==2)
            {
            return t1.sourness;
            }
            else if(j==3)
            {
            return t1.bitterness;
            }
            else if(j==4)
            {
            return t1.savoriness;
            }
            else if(j==6)
            {
            return t1.fattiness;
            }
            else
            {
            return t1.spiciness;
            }
        }

        @Override
        public String getColumnName(int column) {
            String col[]={"Sweetness","Saltiness","Sourness","Bitterness","Savoriness","Fattiness","Spiciness"};
            return col[column];
        }
        
    
    
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Papyrus", 3, 48)); // NOI18N
        jLabel1.setText("Recipe Taste");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(470, 40, 300, 50);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(280, 112, 670, 160);

        jScrollPane2.setViewportView(jEditorPane1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(280, 323, 670, 150);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Taste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Taste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Taste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Taste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Taste(0).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
