
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.AbstractTableModel;
import org.json.JSONArray;
import org.json.JSONObject;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author vanshikajoshi
 */
public class cost_of_recipe extends javax.swing.JFrame {

    /**
     * Creates new form cost_of_recipe
     */
    ArrayList<cost>al;
    mytablemodel tm;
     
    
    JLabel lb;
    public cost_of_recipe(int id) {
        al=new ArrayList<>();
        tm=new mytablemodel();
        lb= new JLabel();
        initComponents();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        int h=(int)d.getHeight();
        int w=(int)d.getWidth();
        lb.setBounds(0, 0, w, h);
        ImageIcon ic =new ImageIcon("src/myuploads/nh10.jpeg");
        Image img=ic.getImage().getScaledInstance(w, h, Image.SCALE_SMOOTH);
        ImageIcon im=new ImageIcon(img);
        lb.setIcon(im);
        add(lb);
        setSize(w, h);
    
        
        jTable1.setModel(tm);
        setVisible(true);
        
        getCost(id);
    }
    
   
void getCost(int id)
    {
        al.clear();
        try
        {
         HttpResponse<String> response = Unirest.get("https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/"+id+"/priceBreakdownWidget.json")
                    .header("X-RapidAPI-Key", "652fb35be6msh43c979dd6e258dap1ede35jsn29e136726656")
                    .header("X-RapidAPI-Host", "spoonacular-recipe-food-nutrition-v1.p.rapidapi.com")
                    .asString();
         if(response.getStatus()==200)
         {
         String ans=response.getBody();
             System.out.println(ans);
             JSONObject mainobj=new JSONObject(ans);
             JSONArray arr=mainobj.getJSONArray("ingredients");
             double total_cost=(Double)mainobj.get("totalCost");
             double cost_per_serving=(Double)mainobj.getDouble("totalCostPerServing");
             
             jLabel3.setText(total_cost+"");
             jLabel5.setText(cost_per_serving+"");
             
             
             for(int i=0;i<arr.length();i++)
             {
             JSONObject obj=(JSONObject)arr.get(i);
             String name=obj.getString("name");
             double price=(Double)obj.get("price");
             JSONObject subobj=(JSONObject)obj.get("amount");
             JSONObject subsubobj=(JSONObject)subobj.getJSONObject("metric");
             double value=(Double)subsubobj.get("value");
             String unit=subsubobj.getString("unit");
             al.add(new cost(name, unit, price, value));
          
             }
                tm.fireTableDataChanged();
         }
        
        }
        catch(Exception ex)
        {
        ex.printStackTrace();
        }
    
    }
    
    
    
    class mytablemodel extends AbstractTableModel
    {

        @Override
        public int getRowCount() {
            return al.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int i, int j) {
            cost rc=al.get(i);
            if(j==0)
            {
                return rc.name;
            }
            else if(j==1)
            {
                return rc.unit;
            }
            else if(j==2)
            {
                return rc.value;
            }
            else
            {
            return rc.price;
            }
            
        }

        @Override
        public String getColumnName(int column) {
            String col[]={"Name","Unit","Value","Price"};
            return col[column];
        }
        
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Phosphate", 3, 36)); // NOI18N
        jLabel1.setText("Cost Of Recipe");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(390, 10, 280, 70);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(200, 110, 650, 300);

        jLabel2.setFont(new java.awt.Font("Adelle Sans Devanagari", 3, 24)); // NOI18N
        jLabel2.setText("Total Cost");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(280, 500, 140, 30);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(460, 500, 280, 30);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        jLabel4.setText("Cost Per Serving");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(280, 557, 160, 30);

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(470, 557, 240, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(cost_of_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(cost_of_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(cost_of_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(cost_of_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new cost_of_recipe(0).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
